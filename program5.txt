#include<stdio.h>
#include<stdlib.h>
#include<GL/glut.h>

float xmin = 50,ymin = 50,xmax = 100, ymax = 100;
float xvmin = 200, yvmin = 200, xvmax = 400, yvmax = 400;
int RIGHT=2,LEFT=1,TOP=8,BOTTOM=4;
float Sx,Sy,Vx1,Vy1,Vx2,Vy2;
float x1,y1,x2,y2;

int compute(float x,float y)
{
    int code = 0;
    if(y>ymax)
        code = TOP;
    if(y<ymin)
        code = BOTTOM;
    if(x>xmax)
        code = RIGHT;
    if(x<xmin)
        code = LEFT;
    return code;
}

void cohen(float x1,float y1,float x2,float y2)
{
    float x,y;
    int accept = 0,done = 0,code_p,code_q,code;
    code_p = compute(x1,y1);
    code_q = compute(x2,y2);
    do
    {
        if(!(code_p | code_q))
        {
            accept = 1;
            done = 1;
        }
        else if(code_p & code_q)
        {
            done = 1;
        }
        else
        {
            code = code_p ? code_p : code_q;
            if(code & TOP)
            {
                x = x1+(x2-x1)*(ymax-y1)/(y2-y1);
                y = ymax;
            }
            else if(code & BOTTOM)
            {
                x = x1+(x2-x1)*(ymin-y1)/(y2-y1);
                y = ymin;
            }
            else if(code & RIGHT)
            {
                y = y1+(y2-y1)*(xmax-x1)/(x2-x1);
                x = xmax;
            }
            else
            {
                y = y1+(y2-y1)*(xmin-x1)/(x2-x1);
                x = xmin;
            }
            if(code == code_p)
            {
                x1 = x;
                y1 = y;
                code_p = compute(x1,y1);
            }
            else
            {
                x2 = x;
                y2 = y;
                code_q = compute(x2,y2);
            }
        }
    }
    while(!done);
    if(accept)
    {
        Sx = (xvmax-xvmin)/(xmax-xmin);
        Sy = (yvmax-yvmin)/(ymax-ymin);
        Vx1 = xvmin+(x1-xmin)*Sx;
        Vy1 = xvmin+(y1-ymin)*Sy;
        Vx2 = xvmin+(x2-xmin)*Sx;
        Vy2 = xvmin+(y2-ymin)*Sy;
    }
}

void display()
{
    // for line Draw
    glClear(GL_COLOR_BUFFER_BIT);
    glLineWidth(2);
    glBegin(GL_LINES);
    glColor3f(1,1,0);
    glVertex2d(x1,y1);
    glVertex2d(x2,y2);
    glEnd();

    // for window Display
    glBegin(GL_LINE_LOOP);
    glColor3f(0.54,1.0,0.75);
    glVertex2f(xmin,ymin);
    glVertex2f(xmax,ymin);
    glVertex2f(xmax,ymax);
    glVertex2f(xmin,ymax);
    glEnd();
    cohen(x1,y1,x2,y2);

    // for viewport Display
    glBegin(GL_LINE_LOOP);
    glColor3f(1,0,1);
    glVertex2f(xvmin,yvmin);
    glVertex2f(xvmax,yvmin);
    glVertex2f(xvmax,yvmax);
    glVertex2f(xvmin,yvmax);
    glEnd();

    //for clipping co-ordinates at the viewport
    glBegin(GL_LINES);
    glColor3f(1,1,0);
    glVertex2d(Vx1,Vy1);
    glVertex2d(Vx2,Vy2);
    glEnd();
    glFlush();
}

void myinit()
{
    glClearColor(0,0,0,1);
    gluOrtho2D(0,500,0,500);
}

int main(int argc,char **argv)
{
    printf("Enter the points\n");
    scanf("%f%f%f%f",&x1,&y1,&x2,&y2);
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500,500);
    glutCreateWindow("Cohen Sedherland");
    glutDisplayFunc(display);
    myinit();
    glutMainLoop();
    return 0;
}